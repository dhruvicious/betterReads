generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prism"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username  String   @unique @db.VarChar(50)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamptz
  reviews   Review[] @relation("UserReviews")

  @@index([email], name: "idx_users_email")
  @@index([username], name: "idx_users_username")
}

model Book {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title     String   @db.VarChar(255)
  author    String   @db.VarChar(255)
  genre     String   @db.VarChar(100)
  createdAt DateTime @default(now()) @db.Timestamptz
  reviews   Review[] @relation("BookReviews")

  @@index([title], name: "idx_books_title")
  @@index([author], name: "idx_books_author")
  @@index([genre], name: "idx_books_genre")
}

model Review {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  bookId     String   @db.Uuid
  reviewerId String   @db.Uuid
  reviewText String   @db.Text
  rating     Int      @db.Integer
  createdAt  DateTime @default(now()) @db.Timestamptz

  book     Book @relation("BookReviews", fields: [bookId], references: [id], onDelete: Cascade)
  reviewer User @relation("UserReviews", fields: [reviewerId], references: [id], onDelete: Cascade)

  @@index([bookId], name: "idx_reviews_book_id")
  @@index([reviewerId], name: "idx_reviews_reviewer_id")
  @@index([rating], name: "idx_reviews_rating")
}
